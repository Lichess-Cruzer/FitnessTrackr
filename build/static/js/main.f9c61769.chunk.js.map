{"version":3,"sources":["api/index.js","components/Logout.js","components/NavBar.js","components/Home.js","components/Login.js","components/Register.js","components/Routines.js","components/Activities.js","components/MyRoutines.js","index.js"],"names":["API_URL","setToken","token","localStorage","setItem","getToken","getItem","makeHeaders","register","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","responseObj","console","error","login","fetchActivities","createActivity","name","description","createRoutine","goal","isPublic","editRoutine","routineId","deleteRoutine","createRoutineActivity","activityId","count","duration","editRoutineActivity","routineActivityId","deleteRoutineActivity","Logout","clear","location","href","SweetAlert","onConfirm","onCancel","NavBar","props","userData","setUserData","useEffect","fetchUserData","then","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","onClick","Home","Login","useState","setUsername","setPassword","handleLogin","event","preventDefault","result","swal","title","text","icon","button","user","onSubmit","value","onChange","e","target","Register","handleRegister","length","Routines","routines","setRoutines","fetchRoutines","catch","log","map","activities","creatorName","Activities","allActivities","setAllActivities","isActive","setIsActive","setName","setDescription","history","useHistory","handleCreateActivity","push","window","reload","MyRoutines","myRoutines","setMyRoutines","isEditActive","setEditIsActive","activityIsActive","setActivityIsActive","setIsPublic","updateRoutineActivity","setUpdateRoutineActivity","setGoal","setCount","setDuration","setRoutineId","setActivityId","setRoutineActivityId","routineActivityName","setRoutineActivityName","handleCreateRoutine","handleDeleteRoutine","handledeleteRoutineActivity","handleEditRoutine","handleEditRoutineActivity","handleSelect","fetchRoutinesByUser","style","marginLeft","marginRight","lineHeight","placeholder","class","creatorId","activity","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9c61769.chunk.js","sourcesContent":["export const API_URL = 'https://fitnesstrac-kr.herokuapp.com';\n\n\nexport function setToken(token) {\n    localStorage.setItem('token', token);\n}\n\nexport function getToken() {\n    return localStorage.getItem('token');\n}\n\nexport function makeHeaders() {\n    if (getToken()) {\n        return {'Content-Type': 'Application/JSON',\n        'Authorization': `Bearer ${getToken()}`}\n    } else {\n        return {'Content-Type': 'Application/JSON'}\n    }\n}\n\nexport async function register(username, password) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/register`, {\n          method: \"POST\",\n          headers: makeHeaders(),\n          body: JSON.stringify({\n              username,\n              password\n            })\n          })\n          const responseObj = await response.json();\n      \n          if (responseObj && responseObj.token) {\n          setToken(responseObj.token); \n        }  \n        return responseObj;\n        } catch(error){\n          console.error(error);\n        }\n}\n\nexport async function login(username, password) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/login`, {\n            method: \"POST\",\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                    username,\n                    password\n            })\n        })\n        const responseObj = await response.json();\n        if (responseObj && responseObj.token) {\n        setToken(responseObj.token);\n        }\n        return responseObj;\n    } catch(error){\n        console.error(error);\n    }\n}\n\nexport async function fetchUserData() {\n    try {\n        const response = await fetch(`${API_URL}/api/users/me`, {\n            method: \"GET\",\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutinesByUser(username) {\n    try {\n        const response = await fetch(`${API_URL}/api/users/${username}/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchActivities() {\n    try{\n        const response = await fetch(`${API_URL}/api/activities`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj\n    } catch(error) {\n      console.error(error)\n    }\n}\n\nexport async function createActivity(name, description) {n    try {\n        const response = await fetch(`${API_URL}/api/activities`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                description\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editActivity(activityId, name, description) {\n    try {\n        const response = await fetch(`${API_URL}/api/activities/${activityId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                description\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutineActivities(routineId) {\n    try {\n        const response = await fetch(`${API_URL}/api/activities/${routineId}/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function fetchRoutines() {\n    try {\n        const response = await fetch(`${API_URL}/api/routines`, {\n            method: 'GET',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function createRoutine(name, goal, isPublic) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                goal,\n                isPublic\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editRoutine(routineId, name, goal) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                name,\n                goal\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function deleteRoutine(routineId) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}`, {\n            method: 'DELETE',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function createRoutineActivity(routineId, activityId, count, duration) {\n    try {\n        const response = await fetch(`${API_URL}/api/routines/${routineId}/activities`, {\n            method: 'POST',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                activityId,\n                count,\n                duration\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function editRoutineActivity(routineActivityId, count, duration) {\n    try {\n        const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n            method: 'PATCH',\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                count,\n                duration\n            })\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n\nexport async function deleteRoutineActivity(routineActivityId) {\n    try {\n        const response = await fetch(`${API_URL}/api/routine_activities/${routineActivityId}`, {\n            method: 'DELETE',\n            headers: makeHeaders()\n        })\n        const responseObj = await response.json();\n        return responseObj;\n    } catch(error) {\n        console.error(error)\n    }\n}\n","import React from 'react';\nimport { setToken } from '../api';\n\nconst Logout = () => {\n    localStorage.clear();\n    setToken('');\n    location.href = \"/home/\";\n    <SweetAlert\n  title=\"You are now logged out!\"\n  onConfirm={this.onConfirm}\n  onCancel={this.onCancel}\n  btnSize=\"sm\"\n/>\n}\n\nexport default Logout;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getToken, fetchUserData } from '../api';\nimport Logout from './Logout';\n\nconst NavBar = (props) => {\n    const {token, setToken, userData, setUserData} = props;\n\n    useEffect(() => {\n        const token = getToken();\n        if(token){\n            setToken(token) ;\n        } \n        fetchUserData().then(setUserData)\n    }, []);\n\n    return (\n        <div>\n        {token ? \n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">Fitness Trackr</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" >Home <span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to={\"/routines\"}>Routines</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to={\"/myroutines\"}>My Routines</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to={\"/activities\"}>Activities</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                            <a className=\"navbar-brand\" >Hi {userData.username}</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <button className=\"btn btn-primary\" onClick={Logout}>Logout</button>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n : \n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">Fitness Trackr</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/routines\">Routines</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/activities\">Activities</a>\n                            </li>\n                        </ul>\n\n                        <div className=\"justify-content-end\">\n                            <a className=\"btn btn-light my-2 my-sm-0\" href=\"/login\">Login</a>\n                            <a className=\"btn btn-light my-2 my-sm-0\" href=\"/register\">Register</a> \n                        </div>\n                    </div>\n                </nav>\n            </div>\n}\n        </div> \n\n    )\n};\n\nexport default NavBar;","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n    return (\n        <div className=\"Home\">\n          <div className=\"lander\">\n            <h1>Fitness Trackr</h1>\n            <p>A performance tracking app for Fitness Junkies</p>\n          </div>\n          <div>\n\n          </div>\n        </div>\n      );\n    }\n\nexport default Home;\n","import React, { useState } from 'react';\nimport swal from 'sweetalert';\nimport { login, setToken } from '../api';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async (event) => {\n        try {\n            event.preventDefault();\n            const result = await login(username, password);\n            if (result.error) {\n                setUsername('')\n                setPassword('')\n                swal({\n                    title: \"Sorry!\",\n                    text: \"Username or password is incorrect. Please try again\",\n                    icon: \"error\",\n                    button: \"Try again\",\n                  });\n            } else {\n                setToken(result.token);\n                if (result.user && result.user.username) {\n                    setUsername(result.user.username);\n                    location.href = \"/home/\";\n                    swal({\n                        title: \"Success\",\n                        text: \"You are now logged in!\",\n                        icon: \"success\",\n                      });\n                }\n            }\n            } catch(error) {\n            console.error(error)\n        } \n}\n    return (\n  <div className=\"form-signin\">\n      <form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n              <h1 className=\"sign-up\">Please Sign Up</h1>\n            <label> Username </label>\n            <input type=\"text\" value={username} onChange={(e) => {setUsername(e.target.value)}} /> \n          </div>\n          <div className=\"form-group\">\n            <label> Password </label>\n            <input type=\"text\" value={password} onChange={(e) => {setPassword(e.target.value)}} />  \n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>\n        )\n    }\n\nexport default Login;","import React, { useState } from 'react';\nimport { register, setToken } from '../api';\n\nconst Register = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleRegister = async (event) => {\n                event.preventDefault();\n        if (password.length < 8 ){\n            setPassword('')\n            swal({\n                title: \"Sorry\",\n                text: \"Password needs to be at least 8 characters long. Please try again with a different username and password combinaison\",\n                icon: \"error\",\n                button: \"Try again\",\n                }); \n            return\n        }\n        try {\n            event.preventDefault();\n            const result = await register(username, password);\n            if (result.error) {\n                setUsername('')\n                setPassword('')\n                swal({\n                    title: \"Sorry\",\n                    text: \"Username already taken please try again\",\n                    icon: \"error\",\n                    button: \"Try again\",\n                  });\n            } else {\n                setToken(result.token);\n                if (result.user && result.user.username) {\n                    setUsername(result.user.username);\n                    location.href = \"/home/\"\n                    swal({\n                        title: \"Success\",\n                        text: \"You successfully created an account!\",\n                        icon: \"success\",\n                      });\n                }\n            }\n            } catch(error) {\n            console.error(error)\n        } \n}\n    return (\n  <div className=\"form-signup\">\n      <form id=\"cover\" onSubmit={handleRegister}>\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input type=\"text\" value={username} onChange={(e) => {setUsername(e.target.value)}} /> \n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input type=\"text\" value={password} onChange={(e) => {setPassword(e.target.value)}} />  \n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n  </div>\n        )\n}\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { fetchRoutines } from '../api';\n\nconst Routines = () => {\n    const [routines, setRoutines] = useState([])\n\n    useEffect( () => {\n        fetchRoutines().then(response => setRoutines(response)).catch(error => console.log(error))\n    },[])\n    \n    return (\n    <> <h1>Routines</h1>\n        {routines && routines.map(({activities, id, creatorName, name, goal}) =>\n            <div key={id}\n            className=\"row\">\n            <div className=\"col-sm-6\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">By {creatorName}</p>\n                <p className=\"card-text\">Goal: {goal}</p>\n                {activities.map(({id, name, description, count, duration}) => {\n                    return<div key={id} className=\"card\">\n                            <div className=\"card-body\">\n                                <h4>Activity</h4>\n                                <h5 className=\"card-title\">{name}</h5>\n                                <p className=\"card-text\">{description}</p>\n                                <p className=\"card-text\">Count: {count}</p>\n                                <p className=\"card-text\">Duration: {duration} min</p>\n                            </div>\n                        </div>\n                    })}\n                </div>\n            </div>\n            </div>\n        </div>\n        )} \n    </>)\n};\n\nexport default Routines;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport { fetchActivities, getToken, createActivity } from '../api';\n\nconst Activities = (props) => {\n    const { token, setToken, allActivities, setAllActivities} = props;\n    const [isActive, setIsActive] = useState(false);\n    const [name, setName]= useState('');\n    const [description, setDescription]= useState('');\n    let history = useHistory();\n\n    useEffect( () => {\n        fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error))\n        const token = getToken();\n        if(token){\n            setToken(token) ;\n        }\n    },[])\n\n    const handleCreateActivity = async () => {\n        try {\n            event.preventDefault();\n            const result = await createActivity(name, description);\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"warning\",\n                    button: \"error\",\n                  });\n            } else {\n            history.push(\"/activities\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n            } catch(error) {\n                console.error(error);\n            }\n    }\n \n    return (<>\n    { \n    token ?\n   <div>\n      <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Activity</button>\n      <div className=\"container\">\n      { isActive ? \n          <form className=\"activityForm\">\n              <div className=\"form-group\">\n                <label >Name</label>\n                <input type=\"email\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}></input>\n              </div>\n              <div className=\"form-group\">\n                <label >Description</label>\n                <input type=\"email\" className=\"form-control\" value={description} onChange={(e) => {setDescription(e.target.value)}}></input>\n              <button type=\"submit\" className=\"btn btn-primary\" onClick={handleCreateActivity}>Submit</button>\n              </div>\n          </form>\n          : \" \"\n      }\n      </div>\n      <div className=\"container\">\n          <h1>Activities</h1>\n\n          {allActivities && allActivities.map(({id, name, description}) => \n            <div key={id}\n            className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{name}</h5>\n                  <p className=\"card-text\">{description}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n            )}\n      </div>\n\n      </div>\n      :\n      allActivities && allActivities.map(({id, name, description}) => \n      <div className=\"container\">\n          <div key={id}\n          className=\"row justify_content-center\">\n          <div className=\"col-3 mr-auto\">\n            <div className=\"card card-body mb-2\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{name}</h5>\n                <p className=\"card-text\">{description}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n    )}\n  </>)\n};\n\nexport default Activities;\n","import React, {useEffect, useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport {fetchRoutinesByUser, createRoutine, deleteRoutine, createRoutineActivity, editRoutine, fetchActivities, deleteRoutineActivity, editRoutineActivity } from '../api';\n\nconst MyRoutines = (props) => {\n    const {userData, allActivities, setAllActivities } = props;\n    const [myRoutines, setMyRoutines] = useState([]);\n    const [isActive, setIsActive] = useState(false);\n    const [isEditActive, setEditIsActive] = useState(false);\n    const [activityIsActive, setActivityIsActive] = useState(false);\n    const [isPublic, setIsPublic]= useState(false);\n    const [updateRoutineActivity, setUpdateRoutineActivity] = useState(false);\n    const [name, setName]= useState('');\n    const [goal, setGoal]= useState('');\n    const [count, setCount] = useState('');\n    const [duration, setDuration] = useState('');\n    const [routineId, setRoutineId] = useState('');\n    const [activityId, setActivityId] = useState('');\n    const [routineActivityId, setRoutineActivityId] = useState('');\n    const [routineActivityName, setRoutineActivityName] = useState('')\n\n\n    let history = useHistory();\n\n    const handleCreateRoutine = async () => {\n        try {\n            event.preventDefault();\n            const result = await createRoutine(name, goal, isPublic);\n            if (result.error) {\n                swal({\n                    title: \"Oh no!\",\n                    text: \"A routine with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new routine!\",\n                icon: \"success\",\n              });\n            }\n        } catch(error) {\n            console.error(error);\n        }\n\n    }\n\n    const handleDeleteRoutine = async (routineId) => {\n        try {\n            const result = await deleteRoutine(routineId)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handledeleteRoutineActivity = async (routineActivityId) => {\n        try {\n            const result = await deleteRoutineActivity(routineActivityId)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when deleting the routine activity\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully deleted your routine activity!\",\n                icon: \"success\",\n              });\n            }\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutine = async (routineId, name, goal) => {\n        try {\n            event.preventDefault();\n            const result = await editRoutine(routineId, name, goal)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n    const handleEditRoutineActivity = async (routineActivityId, count, duration) => {\n        try {\n            event.preventDefault();\n            const result = await editRoutineActivity(routineActivityId, count, duration)\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"Something went wrong when editing the routine\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You successfully edited your routine!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error)\n        }\n    }\n\n\n    const handleSelect=(e)=>{\n        setActivityId(e.target.value);\n      }\n    \n\n\n    const handleCreateActivity = async (routineId, activityId) => {\n        try {\n            event.preventDefault();\n            const result = await createRoutineActivity(routineId,activityId, count, duration);\n            if (result.error) {\n                swal({\n                    title: \"Oh No!\",\n                    text: \"An activity with this name already exists\",\n                    icon: \"'error'\",\n                    button: \"Try Again\",\n                  });\n            } else {\n            history.push(\"/myRoutines\");\n            window.location.reload(true);\n            swal({\n                title: \"Success!\",\n                text: \"You created a new activity!\",\n                icon: \"success\",\n              });\n            }\n\n        } catch(error) {\n            console.error(error);\n        }\n    }\n    \n    useEffect( () => {\n        if (userData.username) {\n            fetchRoutinesByUser(userData.username).then(response => setMyRoutines(response)).catch(error => console.log(error))\n        }\n        if (allActivities.length === 0) {\n            fetchActivities().then(response => setAllActivities(response)).catch(error => console.log(error))\n        }\n    },[userData])\n\n    return (<>\n\n    <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\" onClick={setIsActive}>Create Routine</button>\n\n        { isActive ? \n            <div className=\"container\">\n            <form className=\"activityForm\">\n                <div className=\"form-group\">\n                    <label >Name</label>\n                    <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => {setName(e.target.value)}}/>\n                </div>\n                <div className=\"form-group\">\n                    <label >Goal</label>\n                    <input type=\"text\" className=\"form-control\" value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" value={isPublic} onClick={() => setIsPublic(true)}/>\n                    <label className=\"form-check-label\">\n                        Is Public\n                    </label>\n                </div>\n                <div>\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={ handleCreateRoutine}>Submit</button>\n                </div>\n            </form>\n            </div>\n            : \" \"\n        }\n\n        { isEditActive ? \n            <div className=\"container\">\n                <form className=\"activityForm\" style={{ marginLeft: \"5em\", marginRight: \"5em\", lineHeight:1}}>\n                    <div className=\"form-group\">\n                        <h3>Update the Name and Goal for the routine</h3>\n                            <label >Name</label>\n                            <input type=\"text\" className=\"form-control\" placeholder={name} value={name} onChange={(e) => {setName(e.target.value)}}/>\n                    </div>\n                    <div className=\"form-group\">\n                            <label >Goal</label>\n                            <input type=\"text\" className=\"form-control\" placeholder={goal} value={goal} onChange={(e) => {setGoal(e.target.value)}}/>\n                    </div>\n                    <div>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutine(routineId, name, goal)}>Submit</button>\n                    </div>\n                </form>\n            </div>\n                : \" \"\n            }\n        { updateRoutineActivity ?\n            <div className=\"container\">\n                <form className=\"activityForm\">\n                    <div className=\"form-group\">\n                        <h3>Update the Count and Duration for the activity {routineActivityName} </h3>\n                            <label >Count</label>\n                            <input type=\"text\" className=\"form-control\" placeholder={count} value={count} onChange={(e) => {setCount(e.target.value)}}/>\n                    </div>\n                    <div className=\"form-group\">\n                            <label >Duration</label>\n                            <input type=\"text\" className=\"form-control\" placeholder={duration} value={duration} onChange={(e) => {setDuration(e.target.value)}}/>\n                    </div>\n                    <div>\n                            <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleEditRoutineActivity(routineActivityId, count, duration)}>Submit</button>\n                    </div>\n                </form>\n            </div>\n                : \" \"\n            }\n\n    <div class=\"container\"> <h1 class=\"mb-0\">My Routines</h1>\n        { myRoutines && myRoutines.map(({id, creatorId, isPublic, name, goal, creatorName, activities}) => \n            <div key={id} \n                className=\"row\">\n                <div className=\"col-sm-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{name}</h5>\n                            <p className=\"card-text\">{goal}</p>\n                            <p className=\"card-text\">By: {creatorName}</p>\n                            <div>\n                            <button className=\"btn btn-danger\" onClick={() => handleDeleteRoutine(id)} >Delete</button>\n                            </div>\n                            <div>\n                            <button id={id} className=\"btn btn-secondary\" onClick={() => \n                            {\n                            setEditIsActive(true)\n                            setName(name)\n                            setGoal(goal)\n                            setRoutineId(id)\n                            }\n                            }>Edit</button>\n                            </div>\n                            <div>\n                            <button id={id} type=\"button\" className=\"btn btn-primary\" onClick={() => { setActivityIsActive(true)\n                            setRoutineId(id)\n                            }}>Add Activity</button>\n                            </div>\n                        \n                            { activities.map(({id, routineActivityId, name, description, count, duration}) => <div key={id} className=\"card\">\n                                        <div className=\"card-body\">\n                                            <h4>Activity</h4>\n                                            <h5 className=\"card-title\">{name}</h5>\n                                            <p className=\"card-text\">{description}</p>\n                                            <p className=\"card-text\">Count: {count}</p>\n                                            <p className=\"card-text\">Duration: {duration} min</p>\n                                            <a href=\"#\" className=\"btn btn-danger\" onClick={() => handledeleteRoutineActivity(routineActivityId)}>Delete</a>\n                                            <a href=\"#\" className=\"btn btn-secondary\" onClick={() => {\n                                                setUpdateRoutineActivity(routineActivityId)\n                                                setRoutineActivityId(routineActivityId)\n                                                setRoutineActivityName(name)\n                                                setCount(count)\n                                                setDuration(duration)\n                                            }\n                                            }>Edit</a>\n                                        </div>\n                                    </div>\n                            )}\n                            { activityIsActive && routineId == id ? \n                                <form className=\"activityForm\">\n                                        <select onChange={ handleSelect }>{\n                                            allActivities.map(activity => (\n                                                    <option key={ activity.id } value={ activity.id }>\n                                                    { activity.name }\n                                                    </option>\n                                                    ))\n                                                    }</select>\n                        \n                                        <div className=\"form-group\">\n    \n                                            <label >Count</label>\n                                                <input type=\"text\" className=\"form-control\" value={count} onChange={(e) => {setCount(e.target.value)}}></input>\n                                            <label >Duration</label>\n                                                <input type=\"email\" className=\"form-control\" value={duration} onChange={(e) => {setDuration(e.target.value)}}></input>\n                                            <div>\n                                                <button type=\"submit\" className=\"btn btn-primary\" onClick={() => handleCreateActivity(routineId, activityId)}>Submit</button>\n                                            </div>\n                                        </div>\n                                </form>\n                            : \" \"\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n)}\n</div>\n\n</>)\n};\n\nexport default MyRoutines;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './bootstrap.css';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport NavBar from './components/NavBar';  \nimport Home from './components/Home'; \nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Routines from './components/Routines';\nimport Activities from './components/Activities';\nimport MyRoutines from './components/MyRoutines';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [userData, setUserData] = useState({});\n  const [allActivities, setAllActivities] = useState([]);\n\n  return (\n    <div id=\"App\">\n      <NavBar token={token} setToken={setToken} userData={userData} setUserData={setUserData}/>\n      <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/home\">\n        <Home />\n      </Route>\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      <Route exact path=\"/register\">\n        <Register />\n      </Route>      \n      <Route exact path=\"/routines\">\n        <Routines  />\n      </Route>\n      <Route exact path=\"/myroutines\">\n        <MyRoutines userData={userData} setUserData={setUserData} allActivities={allActivities} setAllActivities={setAllActivities}/>\n      </Route>\n      <Route exact path=\"/activities\">\n        <Activities token={token} setToken={setToken} allActivities={allActivities} setAllActivities={setAllActivities} />\n      </Route>\n      </Switch>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}